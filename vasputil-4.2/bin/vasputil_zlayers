#!/usr/bin/python
# vim: set fileencoding=latin-1
# Copyright (c) 2008 Janne Blomqvist

#  This file is part of Vasputil.

#  Vasputil is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 3 of the License, or
#  (at your option) any later version.

#  Vasputil is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.

#  You should have received a copy of the GNU General Public License
#  along with vasputil.  If not, see <http://www.gnu.org/licenses/>.

"""Find layers in z-coordinates, output distances between them."""

import vasputil.supercell as s
from pylab import *
import sys

if len(sys.argv) < 2:
    print "Usage: vasputil_zlayers POSCAR [dbin] [tol]"
    print "POSCAR: input file"
    print "dbin: Size of histogram bin, default 0.1 Å"
    print "tol: Tolerance, bin should contain > tol*maxbin in order to be " \
            + "counted as layer, where maxbin is the population in the " \
            + "largest bin. Default is 0.1."
    sys.exit(1)

if len(sys.argv) > 2:
    dbin = float(sys.argv[2])
else:
    dbin = 0.1
if len(sys.argv) > 3:
    tol = float(sys.argv[3])
else:
    tol = 0.1

c = s.Cell(sys.argv[1])
c.direct2cartesian()

zc = c.atoms[:,2] # Atom Z coordinates
bins = int(ceil((zc.max() - zc.min())/dbin))
histdat, levels = npy.histogram(zc, bins)
mask = histdat > tol * histdat.max()
plev = levels[mask] + dbin/2
alayer = histdat[mask]
layerdist = plev[1:] - plev[:-1]
print "Z layer    Dprev  Atoms   %relax 1->2"
print "-------------------------------------"
ffmt = "%7.3f"
ifmt = "%3i"
print ffmt % plev[0] + "             " + ifmt % alayer[0]
for ii in range(1, len(plev)):
    print ffmt % plev[ii] + "  " + ffmt % layerdist[ii-1] + "    " \
            + ifmt % alayer[ii] + "     " \
            + ffmt % ((layerdist[ii-1] - layerdist[0]) / layerdist[0] * 100) + " %"
print "-------------------------------------"
print "Explanation of columns:"
print "Z layer: The z coordinate of the layer mid-point, zero is the atom " \
        + "with the lowest z coordinate."
print "Dprev: Distance between this layer and the previous layer."
print "Atoms: Number of atoms in the layer."
print "%relax 1->2: Relaxation in percent compared to the distance between " \
        + "the first and second layers."
# Finally, make a picture:
hist(zc,bins)
xst = "Bin number (bin size " + str(dbin) + " A)"
xlabel(xst)
ylabel("Atoms in bin")
show()

